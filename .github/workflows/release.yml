name: Release to Maven Central

on:
    workflow_dispatch:
        inputs:
            release_notes:
                description: 'Release notes for this version'
                required: false
                default: 'Bug fixes and improvements'

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Set up Temurin JDK 11 with Maven Central credentials and GPG
                uses: actions/setup-java@v4
                with:
                    distribution: temurin
                    java-version: '11'
                    # Must match <publishingServerId> in POM (central-publishing-maven-plugin)
                    server-id: central
                    # Variable names (not values) â€“ values will be provided via env mapping
                    server-username: CENTRAL_USERNAME
                    server-password: CENTRAL_PASSWORD
                    gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
                    gpg-passphrase: MAVEN_GPG_PASSPHRASE

            -   name: Export credentials for settings.xml
                env:
                    CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
                    CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
                    MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
                run: |
                    test -n "$CENTRAL_USERNAME" || (echo "CENTRAL_USERNAME not set" && exit 1)
                    test -n "$CENTRAL_PASSWORD" || (echo "CENTRAL_PASSWORD not set" && exit 1)
                    test -n "$MAVEN_GPG_PASSPHRASE" || (echo "GPG_PASSPHRASE not set" && exit 1)
                    echo "Credentials ready."

            -   name: Extract version from pom.xml
                id: extract_version
                run: |
                    VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
                    echo "version=$VERSION" >> "$GITHUB_OUTPUT"
                    echo "Extracted version: $VERSION"

            -   name: Cache Maven repository
                uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: |
                        ${{ runner.os }}-m2-

            -   name: Build & test
                run: mvn -B -V clean verify

            -   name: Deploy to Maven Central
                env:
                    CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
                    CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
                    MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
                run: mvn -B -V -Prelease -DskipTests deploy

            -   name: Build JARs for GitHub Release
                run: mvn -B -V -DskipTests package source:jar javadoc:jar

            -   name: Create GitHub Release
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: v${{ steps.extract_version.outputs.version }}
                    release_name: ${{ steps.extract_version.outputs.version }}
                    body: |
                        ## Release ${{ steps.extract_version.outputs.version }}

                        ${{ github.event.inputs.release_notes }}

                        ### Maven Dependency
                        ```xml
                        <dependency>
                          <groupId>io.fundoc</groupId>
                          <artifactId>quartz-mongodb</artifactId>
                          <version>${{ steps.extract_version.outputs.version }}</version>
                        </dependency>
                        ```
                    draft: false
                    prerelease: false

            -   name: Upload main JAR
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./target/quartz-mongodb-${{ steps.extract_version.outputs.version }}.jar
                    asset_name: quartz-mongodb-${{ steps.extract_version.outputs.version }}.jar
                    asset_content_type: application/java-archive

            -   name: Upload sources JAR
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./target/quartz-mongodb-${{ steps.extract_version.outputs.version }}-sources.jar
                    asset_name: quartz-mongodb-${{ steps.extract_version.outputs.version }}-sources.jar
                    asset_content_type: application/java-archive

            -   name: Upload javadoc JAR
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./target/quartz-mongodb-${{ steps.extract_version.outputs.version }}-javadoc.jar
                    asset_name: quartz-mongodb-${{ steps.extract_version.outputs.version }}-javadoc.jar
                    asset_content_type: application/java-archive

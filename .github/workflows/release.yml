name: Release to Maven Central

on:
    workflow_dispatch:
        inputs:
            release_notes:
                description: 'Release notes for this version'
                required: false
                default: 'Bug fixes and improvements'

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Set up JDK 11
                uses: actions/setup-java@v4
                with:
                    java-version: '11'
                    distribution: 'temurin'
                    server-id: ossrh
                    server-username: MAVEN_USERNAME
                    server-password: MAVEN_PASSWORD
                    gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
                    gpg-passphrase: MAVEN_GPG_PASSPHRASE

            -   name: Extract version from pom.xml
                id: extract_version
                run: |
                    VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
                    echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                    echo "Extracted version: $VERSION"

            -   name: Cache Maven dependencies
                uses: actions/cache@v3
                with:
                    path: ~/.m2
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2

            -   name: Update pom.xml for Maven Central publishing
                run: |
                    # Add distribution management and profiles for release
                    mvn versions:set-property -Dproperty=maven.compiler.release -DnewVersion=8

            -   name: Build and test
                run: |
                    mvn clean compile -DskipTests

            -   name: Deploy to Maven Central
                env:
                    MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                    MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
                    MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
                run: |
                    mvn clean deploy -DskipTests -Prelease

            -   name: Build JAR files for release
                run: |
                    mvn clean package source:jar javadoc:jar -DskipTests

            -   name: Create GitHub Release
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: v${{ steps.extract_version.outputs.VERSION }}
                    release_name: ${{ steps.extract_version.outputs.VERSION }}
                    body: |
                        ## Release ${{ steps.extract_version.outputs.VERSION }}

                        ${{ github.event.inputs.release_notes }}

                        ### Maven Dependency
                        ```xml
                        <dependency>
                            <groupId>io.fundoc</groupId>
                            <artifactId>quartz-mongodb</artifactId>
                            <version>${{ steps.extract_version.outputs.VERSION }}</version>
                        </dependency>
                        ```

                        ### Changes
                        - Published to Maven Central
                        - See commit history for detailed changes
                    draft: false
                    prerelease: false

            -   name: Upload JAR to GitHub Release
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./target/quartz-mongodb-${{ steps.extract_version.outputs.VERSION }}.jar
                    asset_name: quartz-mongodb-${{ steps.extract_version.outputs.VERSION }}.jar
                    asset_content_type: application/java-archive

            -   name: Upload Sources JAR to GitHub Release
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./target/quartz-mongodb-${{ steps.extract_version.outputs.VERSION }}-sources.jar
                    asset_name: quartz-mongodb-${{ steps.extract_version.outputs.VERSION }}-sources.jar
                    asset_content_type: application/java-archive

            -   name: Upload Javadoc JAR to GitHub Release
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./target/quartz-mongodb-${{ steps.extract_version.outputs.VERSION }}-javadoc.jar
                    asset_name: quartz-mongodb-${{ steps.extract_version.outputs.VERSION }}-javadoc.jar
                    asset_content_type: application/java-archive
